Float32Array(100) [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0
]
bgra8unorm
0
undefined
4
unrestricted_pointer_parameters
pointer_composite_access
packed_4x8_integer_dot_product
readonly_and_readwrite_storage_textures
12
chromium-experimental-subgroup-uniform-control-flow
chromium-experimental-subgroups
float32-filterable
bgra8unorm-storage
rg11b10ufloat-renderable
shader-f16
indirect-first-instance
texture-compression-etc2
texture-compression-bc
timestamp-query
depth32float-stencil8
depth-clip-control
false
undefined
amd
gcn-5
AMD Radeon Vega 8 Graphics (RADV RAVEN)
radv: Mesa 23.2.1-1ubuntu3.1~22.04.2
Float32Array(100) [
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0
]
0
undefined
1
2d
r32float
10
10
texture001
1
1
4
bgra8unorm
buffer001
unmapped
400
8
12
chromium-experimental-subgroup-uniform-control-flow
chromium-experimental-subgroups
float32-filterable
bgra8unorm-storage
rg11b10ufloat-renderable
shader-f16
indirect-first-instance
texture-compression-etc2
texture-compression-bc
timestamp-query
depth32float-stencil8
depth-clip-control
false
undefined
amd
gcn-5
AMD Radeon Vega 8 Graphics (RADV RAVEN)
radv: Mesa 23.2.1-1ubuntu3.1~22.04.2
1
2d
r32float
10
10
texture300
1
1
4
12
chromium-experimental-subgroup-uniform-control-flow
chromium-experimental-subgroups
float32-filterable
bgra8unorm-storage
rg11b10ufloat-renderable
shader-f16
indirect-first-instance
texture-compression-etc2
texture-compression-bc
timestamp-query
depth32float-stencil8
depth-clip-control
false
undefined
amd
gcn-5
AMD Radeon Vega 8 Graphics (RADV RAVEN)
radv: Mesa 23.2.1-1ubuntu3.1~22.04.2
1
2d
r32float
10
10
texture000
1
1
4
12
chromium-experimental-subgroup-uniform-control-flow
chromium-experimental-subgroups
float32-filterable
bgra8unorm-storage
rg11b10ufloat-renderable
shader-f16
indirect-first-instance
texture-compression-etc2
texture-compression-bc
timestamp-query
depth32float-stencil8
depth-clip-control
false
undefined
amd
gcn-5
AMD Radeon Vega 8 Graphics (RADV RAVEN)
radv: Mesa 23.2.1-1ubuntu3.1~22.04.2
1
2d
r32float
10
10
texture300
1
1
4
1
2d
r32float
10
10
texture001
1
1
4
0
undefined
0
undefined
0
undefined
validation:
[Buffer "buffer000"] usage (BufferUsage::(MapRead|CopyDst)) doesn't include BufferUsage::CopySrc.
 - While validating source [Buffer "buffer000"] usage.
 - While encoding [CommandEncoder "command_encoder003"].CopyBufferToBuffer([Buffer "buffer000"], 0, [Buffer "buffer001"], 0, 400).
buffer002
unmapped
400
16
validation:
Usage (TextureUsage::TextureBinding) of [Texture "texture000"] does not include TextureUsage::CopyDst.
 - While calling [Queue].WriteTexture([ImageCopyTexture texture: [Texture "texture000"], mipLevel: 0, origin: [Origin3D x:0, y:0, z:0], aspect: TextureAspect::All], (400 bytes), [TextureDataLayout offset:0, bytesPerRow:40, rowsPerImage:10], [Extent3D width:10, height:10, depthOrArrayLayers:1])
buffer001
unmapped
400
8
validation:
Source and destination are the same buffer ([Buffer "buffer300"]).
 - While encoding [CommandEncoder "command_encoder301"].CopyBufferToBuffer([Buffer "buffer300"], 0, [Buffer "buffer300"], 0, 400).
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder301"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder301"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder301"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder301"]])
validation:
Command cannot be recorded while [CommandEncoder "command_encoder000"] is locked and [ComputePassEncoder "compute_pass_encoder0000"] is currently open.
 - While encoding [CommandEncoder "command_encoder000"].InsertDebugMarker("mymarker").
validation:
[CommandBuffer from CommandEncoder "command_encoder100"] cannot be submitted more than once.
 - While calling [Queue].Submit([[CommandBuffer from CommandEncoder "command_encoder100"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder000"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder000"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder003"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder003"]])
validation:
[CommandBuffer from CommandEncoder "command_encoder004"] cannot be submitted more than once.
 - While calling [Queue].Submit([[CommandBuffer from CommandEncoder "command_encoder004"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder003"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder003"]])
validation:
Parent encoder of [Invalid ComputePassEncoder "compute_pass_encoder0001"] is already finished.
 - While encoding [Invalid ComputePassEncoder "compute_pass_encoder0001"].PopDebugGroup().
validation:
Parent encoder of [ComputePassEncoder "compute_pass_encoder0000"] is already finished.
 - While encoding [ComputePassEncoder "compute_pass_encoder0000"].PopDebugGroup().
validation:
[Texture "texture001"] usage (TextureUsage::TextureBinding) doesn't include TextureUsage::CopySrc.
 - While validating source [Texture "texture001"] usage.
 - While encoding [CommandEncoder "command_encoder001"].CopyTextureToBuffer([Texture "texture001"], [Buffer "buffer001"], [Extent3D width:10, height:10, depthOrArrayLayers:1]).
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder001"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder001"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder301"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder301"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder301"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder301"]])
validation:
[Invalid CommandBuffer from CommandEncoder "command_encoder301"] is invalid.
 - While calling [Queue].Submit([[Invalid CommandBuffer from CommandEncoder "command_encoder301"]])
